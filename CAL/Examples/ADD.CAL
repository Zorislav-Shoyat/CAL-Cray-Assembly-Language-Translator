         OPTIONS LIST
*         OPTIONS SHOWSF
*         OPTIONS SHOWSTAT
****************************************
*23456789012345678901234567890123456789
*        111111111122222222222333333333
*xxx     yyy       zzz            comm
****************************************
*
* ZORISLAV SHOYAT, 1/4/2014, 13:46
*
* FIRST VIRTUE KERNELS FOR CRAY-1
* .. ADDITION
*
* A1 RIGHT (TOP OF STACK)
* A2 LEFT
* A6 VECTOR LENGTH
* A7 RESULT
*
****************************************
         START     COMPUTE
COMPUTE  =         *
         S2        RT
ADD      =         *

* INTEGER + INTEGER
         A1        RIGHT
         A2        LEFT
         A7        RESULT
         A6        96
         R         $ADDII
*
* REAL + REAL
ADR      A1        RIGHT
         A7        RESULT
         A6        96
         R         $ADDRR
*
         J         EOPROG
*
*

******************************************
*
* ZORISLAV SHOYAT, 1/4/2014, 13:48
* ATELIER, SHANTI
*
******************************************
*
* ADDITIONS
*
******************************************

*******************************************
** INTEGER NUMBERS                       **
*******************************************

*******************************************
*
* ADD LEFT INTEGER AND RIGHT INTEGER
*
* NAME: $ADDII
*
* DESCRIPTION:
*        ADD INTEGER TO INTEGER
*
* ENTRY: A1 = RIGHT INTEGER ARGUMENT ADDRESS
*        A2 = LEFT INTEGER ARGUMENT ADDRESS
*        A7 = REAL RESULT SPACE ADDRESS
*        A6 = VECTOR LENGTH
*
* EXIT: RESULT IN MEMORY AT A7
*
* USES: 
*
* RESTRICTION:
*       DOES NOT CHECK FOR INTEGER OVERFLOW
*       USE ONLY IF ACTUALLY NECESSARY
*
* BEWARE: OPTIMISED (ADDRESS CALCULATIONS)
*
******************************************
*
* A5 = 1 FOR INTEGER NUMBERS, ERGO NOT USED
*
$ADDII   =         *
* SET A5 TO 1 FOR VECTOR STRIDE ON REAL NUMBERS
*         A5        1
* PROCESS VECTORS LONGER THAN 64 ELEMENTS
         A4        A6            * PRESERVE LENGTH
         S2        <6
         S1        A6
         S1        S1&S2
         A6        S1
         S0        S1
         JSN       $ADDII$L
         A6        64
*
* PROCESS:
*    V2 = LEFT INTEGER(STRIDE 1)
*    V1 = RIGHT INTEGER(STRIDE 1)
*    V7 = RESULT INTEGER
*
* LOAD AND MULTIPLY
$ADDII$L VL        A6
         A0        A1
         V1        ,A0,1            * B
         A0        A2
         V2        ,A0,1            * A
         A0        A7
         A1        A2+A6            * STRIDE 1 = INTEGER
         A2        A1+A6            * STRIDE 1 = INTEGER
         A4        A4-A6
         A7        A7+A6
         V7        V2+V1            * R = A + B
         ,A0,1     V7
*
* CHECK FOR MORE ELEMENTS
         A0        A4
         A6        64         
         JAN       $ADDII$L
*
         J         B00

*******************************************
** REAL NUMBERS                          **
*******************************************

*******************************************
*
* ADD LEFT REAL AND RIGHT REAL
*
* NAME: $ADDRR
*
* DESCRIPTION:
*        ADD REAL TO REAL
*
* ENTRY: A1 = RIGHT REAL ARGUMENT ADDRESS
*        A2 = LEFT REAL ARGUMENT ADDRESS
*        A7 = REAL RESULT SPACE ADDRESS
*        A6 = VECTOR LENGTH
*
* EXIT: RESULT IN MEMORY AT A7
*
* USES: 
*
* RESTRICTION:
*
* BEWARE: OPTIMISED (ADDRESS CALCULATIONS)
*
******************************************
*
* A5 = 1 FOR REAL NUMBERS, ERGO NOT USED
*
$ADDRR   =         *
* SET A5 TO 1 FOR VECTOR STRIDE ON REAL NUMBERS
*         A5        1
* PROCESS VECTORS LONGER THAN 64 ELEMENTS
         A4        A6            * PRESERVE LENGTH
         S2        <6
         S1        A6
         S1        S1&S2
         A6        S1
         S0        S1
         JSN       $ADDRR$L
         A6        64
*
* PROCESS:
*    V2 = LEFT REAL (STRIDE 1)
*    V1 = RIGHT REAL (STRIDE 1)
*    V7 = RESULT REAL
*
* LOAD AND MULTIPLY
$ADDRR$L VL        A6
         A0        A1
         V1        ,A0,1            * B
         A0        A2
         V2        ,A0,1            * A
         A0        A7
         A1        A2+A6            * STRIDE 1 = REAL
         A2        A1+A6            * STRIDE 1 = REAL
         A4        A4-A6
         V7        V2+FV1           * R = A + B
         ,A0,1     V7
         A7        A7+A6
*
* CHECK FOR MORE ELEMENTS
         A0        A4
         A6        64         
         JAN       $ADDRR$L
*
         J         B00

*****************************************************



*******************************************
*******************************************
*******************************************
EOPROG   =        *
         S1       RT
         S2       S1-S2
         ENDP


LEFT     DATA      *,256
ENDLEFT  =         *
         DATA      *,1                 * THE DATA SHALL NOT BE ALIGNED BETWEEN
*                                      * BLOCKS TO PREVENT SAME LINE CONFLICT
RIGHT    DATA      *,2048
         DATA      *,1
RESULT   DATA      *,2048

******************************************************************
*
******************************************************************

DATASPAC =         *
* Virtue OUTPUT GOES HERE: (SEE PROGRAMME BELOW)
*
*
ENDDATA  =         *

         EXEC      *,*

         END
